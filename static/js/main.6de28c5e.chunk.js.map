{"version":3,"sources":["images/logo.png","Components/firebase.js","Components/LoadingAnimation.js","Components/CreateQuiz.js","Components/SelectQuiz.js","Components/ShowFinalScore.js","Components/PlayQuiz.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","LoadingAnimation","className","icon","faSync","aria-hidden","CreateQuiz","handleChange","e","setState","target","name","value","handleClick","preventDefault","props","loadingHandler","quiz","axios","url","method","responseType","params","amount","state","category","selectedCategory","difficulty","token","type","encode","then","response","data","results","callQuiz","categories","isLoading","trivia_categories","console","log","for","id","onChange","this","map","obj","key","min","max","onClick","Component","SelectQuiz","selectQuiz","quizList","database","ref","once","val","Object","keys","ShowFinalScore","save","quizName","prompt","child","set","score","length","to","reset","PlayQuiz","questionNumber","setCorrectPosition","currentQuestion","showFinalScore","correct","newScore","correctPosition","Math","floor","random","position","correctAnswer","question","incorrect_answers","firstQuestion","listIncorrectAnswers","answer","i","atob","correct_answer","App","dataReady","activeQuizPath","basename","process","src","logo","alt","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6de28c5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d89ed495.png\";","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBvJwO2yQSGErN9NBZQnldxiKSwQSt1mkc\",\n    authDomain: \"quarantine-pursuit.firebaseapp.com\",\n    databaseURL: \"https://quarantine-pursuit.firebaseio.com\",\n    projectId: \"quarantine-pursuit\",\n    storageBucket: \"quarantine-pursuit.appspot.com\",\n    messagingSenderId: \"800505781023\",\n    appId: \"1:800505781023:web:445c432c49eb4bf083ae2a\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React from 'react';\nimport { faSync } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n\nconst LoadingAnimation = () => {\n    return (\n        <div className=\"loading-container\">\n            <FontAwesomeIcon icon={faSync} aria-hidden=\"true\" />\n        </div>\n    )\n}\nexport default LoadingAnimation","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nclass CreateQuiz extends Component {\n    constructor() {\n        super();\n        this.state = {\n            categories: [],\n            isLoading: true,\n            selectedCategory: 0,\n            amount: 1,\n            difficulty: \"easy\",\n            token: \"\",\n        }\n    }\n\n    componentDidMount() {\n\n        axios({\n            url: 'https://opentdb.com/api_category.php',\n            method: 'GET',\n            responseType: 'JSON',\n        }).then((response) => {\n            let categories = response.data.trivia_categories\n            this.setState({\n                categories,\n                isLoading: false,\n            })\n        })\n\n        axios({\n            url: 'https://opentdb.com/api_token.php?command=request',\n            method: 'GET',\n            responseType: 'JSON',\n        }).then((response) => {\n            let token = response.data.token;\n\n            this.setState({\n                token,\n            })\n            console.log(this.state.token);\n        })\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleClick = (e) => {\n        e.preventDefault();\n        this.props.loadingHandler();\n        let quiz = {};\n        axios({\n            url: 'https://opentdb.com/api.php',\n            method: 'GET',\n            responseType: 'JSON',\n            params: {\n                amount: this.state.amount,\n                category: this.state.selectedCategory,\n                difficulty: this.state.difficulty,\n                token: this.state.token,\n                type: \"multiple\",\n                encode: 'base64'\n            }\n        }).then((response) => {\n            quiz = response.data.results;\n            this.props.callQuiz(quiz);\n        })\n    }\n\n\n    render() {\n\n        return (\n            <form>\n                <div>\n                    <label for=\"selectedCategory\">Choose a Category:</label>\n                    <select name=\"selectedCategory\" id=\"categories\" onChange={this.handleChange}>\n                        {this.state.categories.map((obj, id) => {\n                            return (<option key={id} value={obj.id}>{obj.name}</option>)\n                        })}\n                    </select>\n                </div>\n                <div>\n                    <label for=\"amount\">Number of Questions:</label>\n                    <input type=\"number\" name=\"amount\" min=\"0\" max=\"20\" value={this.state.amount} onChange={this.handleChange}></input>\n                    <button onClick={this.handleClick}>Generate Quiz</button>\n                </div>\n\n            </form>\n        );\n    };\n}\n\nexport default CreateQuiz;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport firebase from './firebase';\n\n\n\nclass SelectQuiz extends Component {\n    constructor() {\n        super();\n        this.state = {\n            quizList: [],\n        }\n    }\n\n    componentDidMount() {\n        const dbRef = firebase.database().ref();\n        \n        dbRef.once('value', (response) => {\n            \n            const data = response.val();\n            const quizList = Object.keys(data);\n            this.setState({\n                quizList,\n            })\n        })\n    }\n\n    handleClick = (e) => {\n        this.props.selectQuiz(e.target.name);\n    }\n\n    render() {\n    return (\n        <div>\n            {this.state.quizList.map((quiz) => {\n                return (\n                    <div key={quiz}>\n                    {/* <Link to=\"/x\"> */}\n                        <button name={quiz} onClick={this.handleClick}>{quiz}</button>\n                    {/* </Link> */}\n                    </div>\n                )\n            })}\n        </div>\n    );\n    }\n}\n\nexport default SelectQuiz","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport firebase from './firebase';\n\nclass ShowFinalScore extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            quizName: \"\",\n        }\n    }\n\n    save = () => {\n        let quizName = prompt(\"What would you like to name this quiz\");\n\n        this.setState({\n            quizName,\n        })\n\n        const dbRef = firebase.database().ref();\n        dbRef.child(quizName).set(this.props.quiz);\n    }\n\n   \n    render() {\n        return (\n            <div>\n        <h2>Your Score is: {this.props.score}/{this.props.quiz.length}</h2>\n        \n        <Link to=\"/\"><button onClick={this.props.reset}>Home</button></Link>\n        <button onClick={this.save}>Save Quiz</button>\n      </div>\n    );\n}\n    \n}\n\nexport default ShowFinalScore;          ","import React, { Component } from 'react';\nimport ShowFinalScore from \"./ShowFinalScore\";\n\nclass PlayQuiz extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentQuestion: {\n        question: ' ',\n        incorrect_answers: [],\n      },\n      questionNumber: 0,\n      position: 1,\n      score: 0,\n      showFinalScore: false,\n\n    }\n  }\n\n  componentDidMount() {\n    console.log('mounted')\n    let firstQuestion = this.props.quiz[0];\n    this.setState({\n      currentQuestion: firstQuestion,\n    })\n    this.setCorrectPosition();\n  }\n\n  \n\n  handleClick = () => {\n    let questionNumber = this.state.questionNumber\n    questionNumber++;\n    \n    if (questionNumber < this.props.quiz.length ) {\n      this.setCorrectPosition();\n      console.log(this.state.currentQuestion);\n      this.setState({\n        questionNumber,\n        currentQuestion: this.props.quiz[questionNumber]\n      })\n    } else {\n      console.log(\"end\");\n      \n      this.setState({\n        showFinalScore: true\n      })\n    }\n  }\n\n  correct = () => {\n    let newScore = this.state.score\n    newScore++\n    this.setState({\n      score: newScore\n    })\n    this.handleClick()\n  }\n\n\n  setCorrectPosition = () => {\n    let correctPosition = Math.floor(Math.random() * 4);\n    this.setState({ \n      position: correctPosition\n    })\n  }\n\n  reset = () => {\n    this.setState({\n      currentQuestion: {\n        correctAnswer: '',\n        question: '',\n        incorrect_answers: [],\n      },\n      questionNumber: 0,\n      position: 1,\n      score: 0,\n      showFinalScore: false,\n    })\n    this.props.reset();\n  }\n\n  render() {\n    let incorrectAnswers = this.state.currentQuestion.incorrect_answers;\n    // Because array is only 3 objects long, the || statement prints it if the correct answer is in 4th position\n    let listIncorrectAnswers = incorrectAnswers.map((answer, i) => {\n      if (this.state.position === i || (i === 2 && this.state.position == 3)) {\n        return (\n          <div key={i}>\n            <button onClick={this.correct}>{atob(this.state.currentQuestion.correct_answer)}</button>  \n            <button onClick={this.handleClick}>{atob(answer)}</button>\n          </div>\n        );\n      } else { \n        return <button key={i} onClick={this.handleClick}>{atob(answer)}</button>\n      }\n    });\n     \n\n\n    return (\n      <div>\n        {this.state.showFinalScore ? <ShowFinalScore quiz={this.props.quiz} score={this.state.score} reset={this.reset} /> : ( \n          <div>\n            <h2>{atob(this.state.currentQuestion.question)}</h2> {listIncorrectAnswers}\n          </div>\n         )}\n        \n        \n      </div>\n    )\n  }\n}\n\nexport default PlayQuiz\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport './index.scss';\nimport firebase from './Components/firebase.js';\nimport LoadingAnimation from './Components/LoadingAnimation.js';\nimport logo from './images/logo.png';\n\n// Components\nimport CreateQuiz from './Components/CreateQuiz';\nimport SelectQuiz from './Components/SelectQuiz';\nimport PlayQuiz from './Components/PlayQuiz';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      activeQuizPath: \"\",\n      quiz: [{\n        question: '',\n        correctAnswer: '',\n        incorrect_answers: [],\n      }],\n      dataReady: false,\n      isLoading: false,\n    }\n  }\n\n  callQuiz = (quiz) => {\n    this.setState({\n      quiz,\n      dataReady: true,\n      isLoading: false,\n    })\n    console.log(this.state.quiz);\n  }\n\n  selectQuiz = (quiz) => {\n    const dbRef = firebase.database().ref(quiz);\n    dbRef.once(\"value\", (response) => {\n      const quiz = response.val();\n      this.setState({\n        quiz,\n      })\n    }).then(() => {\n      this.setState({\n        dataReady: true,\n        isLoading: false,\n      })\n    })\n\n  }\n\n  reset = () => {\n    this.setState({\n      activeQuizPath: \"\",\n      quiz: [{\n        question: '',\n        correctAnswer: '',\n        incorrect_answers: [],\n      }],\n      dataReady: false,\n    })\n    console.log('reset');\n  }\n\n  loadingHandler = () => {\n    this.setState({\n      isLoading: true,\n    })\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"app\">\n          <header>\n            <h1 className=\"sr-only\">Qurantine Pursuit</h1>\n            <img src={logo} alt=\"Logo for Qurantine Pursuit\" />\n          </header>\n          <main>\n            {this.state.isLoading ? <LoadingAnimation /> : null}\n            <Route exact path=\"/\">\n              <button><Link to=\"/create\">Create a Quiz!</Link></button>\n              <button><Link to=\"/select\">Select an Existing Quiz!</Link></button>\n            </Route>\n            <Route path=\"/create\">\n              <CreateQuiz callQuiz={this.callQuiz} loadingHandler={this.loadingHandler} />\n            </Route>\n            <Route path=\"/select\">\n              <SelectQuiz selectQuiz={this.selectQuiz} />\n            </Route>\n\n            {this.state.dataReady ? <Redirect to=\"/play\" /> : null}\n\n            <Route path=\"/play\">\n              <PlayQuiz quiz={this.state.quiz} reset={this.reset} />\n            </Route>\n          </main>\n        </div>\n      </Router >\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}